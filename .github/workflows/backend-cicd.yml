on:
  push:
    paths:
      - 'infra/**'
      - 'backend/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy Lambda
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Build Lambda Package
        run: |
          mkdir -p infra/lambda
          zip -j infra/lambda/updateVisitorCount.zip backend/lambda_function.py
          ls -lh infra/lambda/updateVisitorCount.zip

      - name: Configure AWS Credentials
        id: aws
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::681121191318:role/GithubAdminAccess
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check AWS Identity
        run: aws sts get-caller-identity

      - name: Debug Terraform AWS creds
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
          echo "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN:0:10}..."



      - name: Terraform Deploy
        env:   
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
          cd infra
          terraform init -lock=false
          
          # CloudFront Distribution
          # Replace <CLOUDFRONT_DIST_ID> with your existing distribution ID from AWS
          terraform import -lock=false aws_cloudfront_distribution.s3_distribution E34XNASCEYM453
          
          # DynamoDB Table
          terraform import -lock=false aws_dynamodb_table.visitor_Counter niketrathod.com_visitorCounter
          
          # DynamoDB Table Item
          terraform import -lock=false aws_dynamodb_table_item.visitor_count niketrathod.com_visitorCounter:visitorCounter
          
          # IAM Role for Lambda
          terraform import -lock=false aws_iam_role.lambda_role updateVisitorCountRole
          
          # IAM Role Policy Attachments
          terraform import -lock=false aws_iam_role_policy_attachment.DynamoDB_full_access updateVisitorCountRole/arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          terraform import -lock=false aws_iam_role_policy_attachment.basic_execution updateVisitorCountRole/arn:aws:iam::681121191318:policy/service-role/AWSLambdaBasicExecutionRole-fc45e792-37dc-4b2a-833d-18063c0a4dc2
          terraform import -lock=false aws_iam_role_policy_attachment.micro_execution updateVisitorCountRole/arn:aws:iam::681121191318:policy/service-role/AWSLambdaMicroserviceExecutionRole-2e0ad9eb-6462-4935-9c50-5dcc03b3d85d
          
          # Lambda Function
          terraform import -lock=false aws_lambda_function.my_lambda updateVisitorCount
          
          # API Gateway
          terraform import -lock=false aws_apigatewayv2_api.api_gateway 7s6992vnf6
          
          # API Gateway Integration
          terraform import -lock=false aws_apigatewayv2_integration.lambda_integration 7s6992vnf6/s7ba9jc
          
          # API Gateway Route
          terraform import -lock=false aws_apigatewayv2_route.post_route 7s6992vnf6/janzj4d

          terraform apply -lock=false -auto-approve
